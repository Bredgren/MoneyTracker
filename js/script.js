// Generated by CoffeeScript 1.8.0
(function() {
  var Main, loadUrl,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  loadUrl = function(url, callback) {
    console.log("fetching", url);
    return $.getJSON(url, callback);
  };

  Main = (function() {
    Main.prototype.scope = "https://spreadsheets.google.com/feeds";

    Main.prototype.access = "private/full?alt=json-in-script&access_token=";

    Main.prototype.clientId = "225160616080-rlae3dprbofq5i1etegg5vdvobf2rhqi.apps.googleusercontent.com";

    Main.prototype.apiKey = "14OPwgdy9-2uTIS-x5CDMOYcn2Yo2kuML3Fn0tVMdWrA";

    function Main() {
      this.newApiKey = __bind(this.newApiKey, this);
      this.handleWorksheetData = __bind(this.handleWorksheetData, this);
      this.handleDataWorksheet = __bind(this.handleDataWorksheet, this);
      this.handleCategoryWorksheet = __bind(this.handleCategoryWorksheet, this);
      this.worksheetUrl = __bind(this.worksheetUrl, this);
      this.worksheetDataUrl = __bind(this.worksheetDataUrl, this);
      var apiKey;
      this.category = {};
      this.data = {};
      apiKey = localStorage["apiKey"];
      this.newApiKey(this.apiKey);
    }

    Main.prototype.worksheetDataUrl = function() {
      var token, url;
      token = gapi.auth.getToken().access_token;
      url = this.scope + "/worksheets/" + this.apiKey + "/" + this.access + token + "&callback=?";
      return url;
    };

    Main.prototype.worksheetUrl = function(worksheetId) {
      var token, url;
      token = gapi.auth.getToken().access_token;
      url = this.scope + "/list/" + this.apiKey + "/" + worksheetId + "/" + this.access + token + "&callback=?";
      return url;
    };

    Main.prototype.handleCategoryWorksheet = function(jsonData) {
      var categoryName, parentCategory, recuring, row, _i, _len, _ref, _results;
      console.log("handleCategoryWorksheet", jsonData);
      _ref = jsonData.feed.entry;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        row = _ref[_i];
        categoryName = row.gsx$categoryname.$t;
        parentCategory = row.gsx$parentcategory.$t;
        recuring = row.gsx$recuring.$t;
        _results.push(this.category[categoryName] = {
          parent: parentCategory,
          recuring: recuring
        });
      }
      return _results;
    };

    Main.prototype.handleDataWorksheet = function(jsonData) {
      var category, cost, date, notes, row, _i, _len, _ref, _results;
      console.log("handleDataWorksheet", jsonData);
      _ref = jsonData.feed.entry;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        row = _ref[_i];
        date = row.gsx$date.$t;
        category = row.gsx$category.$t;
        cost = row.gsx$cost.$t;
        notes = row.gsx$notes.$t;
        _results.push(this.data[new Date(date)] = {
          category: category,
          cost: parseFloat(cost),
          notes: notes
        });
      }
      return _results;
    };

    Main.prototype.handleWorksheetData = function(jsonData) {
      var id, sections, title, worksheetData, _i, _len, _ref, _results;
      console.log("handleWorksheetData", jsonData);
      _ref = jsonData.feed.entry;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        worksheetData = _ref[_i];
        title = worksheetData.title.$t;
        sections = worksheetData.id.$t.split("/");
        id = sections[sections.length - 1];
        if (title === "Categories") {
          _results.push(loadUrl(this.worksheetUrl(id), this.handleCategoryWorksheet));
        } else {
          _results.push(loadUrl(this.worksheetUrl(id), this.handleDataWorksheet));
        }
      }
      return _results;
    };

    Main.prototype.newApiKey = function(key) {
      var config;
      console.log("newApiKey", key);
      this.apiKey = key;
      config = {
        'client_id': this.clientId,
        'scope': this.scope
      };
      this.data = {};
      this.category = {};
      return gapi.auth.authorize(config, (function(_this) {
        return function() {
          return loadUrl(_this.worksheetDataUrl(), _this.handleWorksheetData);
        };
      })(this));
    };

    return Main;

  })();

  $("#authorize-button").click(function() {
    var m;
    m = new Main();
    return console.log(m);
  });

}).call(this);
